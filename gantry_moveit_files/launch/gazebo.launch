<?xml version="1.0"?>
<launch>
  <arg name="paused" default="false"/>
  <arg name="gazebo_gui" default="true"/>
  <arg name="initial_joint_positions" doc="Initial joint configuration of the robot"
       default=" -J X_Joint 0 -J Y_Joint 0 -J Z_Joint 0 -J Z_Rot_Joint 0"/>

  <!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="$(find gantry)/worlds/light.world"/>
    <arg name="paused" value="true"/>
    <arg name="gui" value="$(arg gazebo_gui)"/>
  </include>

  <!-- send robot urdf to param server -->
  <param name="robot_description" textfile="$(find gantry)/urdf/Gantry.urdf" />

  <param name="conveyor" textfile="$(find gantry)/urdf/conveyor.urdf"/>
  <param name="conveyor2" textfile="$(find gantry)/urdf/conveyor2.urdf"/>

  <!-- unpause only after loading robot model -->
  <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />
  <!-- push robot_description to factory and spawn robot in gazebo at the origin, change x,y,z arguments to spawn in a different position -->
  <arg name="world_pose" value="-x 0 -y 0 -z 0" />
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot $(arg unpause) $(arg world_pose) $(arg initial_joint_positions)" respawn="false" output="screen" />
  <node name="spawn_gazebo_conveyor" pkg="gazebo_ros" type="spawn_model" args="-urdf -param conveyor -model conveyor_belt $(arg unpause) $(arg world_pose) $(arg initial_joint_positions)" respawn="false" output="screen" />
  <node name="spawn_gazebo_conveyor2" pkg="gazebo_ros" type="spawn_model" args="-urdf -param conveyor2 -model conveyor_belt2 $(arg unpause) $(arg world_pose) $(arg initial_joint_positions)" respawn="false" output="screen" />
  <node name="cube_spawner" pkg="gantry_moveit_files" type="demo.py" output="screen"/>
  <node name="detect" pkg="gantry_moveit_files" type="detection.py" output="screen"/>
  <!-- Load joint controller parameters for Gazebo -->
  <!--<rosparam file="$(find gantry_moveit_files)/config/gazebo_controllers.yaml" /> -->
  <!-- Spawn Gazebo ROS controllers -->
  <!-- <node name="gazebo_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller" /> -->
  <!-- Load ROS controllers -->
  <include file="$(dirname)/ros_controllers.launch"/>

</launch>
